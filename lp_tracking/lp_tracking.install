<?php
function lp_tracking_uninstall() {

  //delete field_status
  $field_name = 'field_status';
  if (field_info_field($field_name)) {
    field_delete_field($field_name);
    if ($instance = field_info_instance('comment', $field_name, 'comment_node_live_parcel')) {
      field_delete_instance($instance);
    }
  }


  $field_name = 'field_starred';
  if (field_info_field($field_name)) {
    field_delete_field($field_name);
    if ($instance = field_info_instance('comment', $field_name, 'comment_node_live_parcel')) {
      field_delete_instance($instance);
    }
  }

  //delete field_comment_body
  $field_name = 'comment_body';
  if (field_info_field($field_name)) {
    field_delete_field($field_name);
    if ($instance = field_info_instance('comment', $field_name, 'comment_node_live_parcel')) {
      field_delete_instance($instance);
    }
  }


  //delete field_driver_assigned
  $field_name = 'field_driver_assigned';
  if (field_info_field($field_name)) {
    field_delete_field($field_name);
    if ($instance = field_info_instance('comment', $field_name, 'comment_node_live_parcel')) {
      field_delete_instance($instance);
    }
  }

  //delete field_gps
  $field_name = 'field_gps';
  if (field_info_field($field_name)) {
    field_delete_field($field_name);
    if ($instance = field_info_instance('comment', $field_name, 'comment_node_live_parcel')) {
      field_delete_instance($instance);
    }
  }

  //delete field_photo
  $field_name = 'field_photo';
  if (field_info_field($field_name)) {
    field_delete_field($field_name);
    if ($instance = field_info_instance('comment', $field_name, 'comment_node_live_parcel')) {
      field_delete_instance($instance);
    }
  }

  //delete driver role
  $roleName = 'driver';
  user_role_delete($roleName);

}

function lp_tracking_install() {
  //add driver role
  $roleName = 'driver';
  if(!user_role_load_by_name($roleName)){
    $role = new stdClass();
    $role->name = $roleName;
		$role->weight = 10;
    user_role_save($role);
    $roles = user_role_load_by_name($roleName);
    user_role_change_permissions($roles->rid, 
      array(
        'skip comment approval' => TRUE,
        'submit latitude/longitude' => TRUE,
        'post comments' =>TRUE,
        'view all orders'=>TRUE
      )
    );

  }
	if($role=user_role_load_by_name('authenticated user')){
  		 user_role_change_permissions($role->rid, 
      array(
        'skip comment approval' => False,
        'post comments' =>False
      )
    );
    }
  if($role=user_role_load_by_name('administrator')){
  		$role->weight = 11;
      user_role_save($role);
    }

 
  //add field_status
  $field_name = 'field_status';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name, 
      'type' => 'list_text',
      'settings' => array(
        'allowed_values' => array(
          'pending' => 'pending',
          'scheduled' => 'scheduled',
          'picked-up' => 'picked-up',
          'pick-up attempted' => 'pick-up attempted',
          'unloaded' => 'unloaded',
          'loaded' => 'loaded',
          'delivered' => 'delivered',
          'delivery attempted' => 'delivery attempted',
          'transferred' => 'transferred',
          'cancelled' => 'cancelled',
        ),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => $field_name, 
      'entity_type' => 'comment', 
      'label' => 'Status', 
      'bundle' => 'comment_node_live_parcel', 
      'required' => TRUE,
      'widget' => array(
        'type' => 'options_select',
      ), 
      'display' => array(
        'default' => array(
          'label' => 'inline',
        ),
      ),
    );
    field_create_instance($instance);
  }

  //add field_driver_assigned
  $field_name = 'field_driver_assigned';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name, 
      'type' => 'user_reference',
      'settings' => array(
        'referenceable_roles' => array(user_role_load_by_name('driver')->rid,),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => $field_name, 
      'entity_type' => 'comment', 
      'label' => 'Driver Assigned', 
      'bundle' => 'comment_node_live_parcel', 
      'required' => FALSE,
      'description' => 'Driver assigned to pick-up the parcel.',
      'widget' => array(
        'type' => 'options_select',
      ), 
      'display' => array(
        'default' => array(
          'label' => 'inline',
        ),
      ),
    );
    field_create_instance($instance);
  }

  //add field_starred

  $field_name = 'field_starred';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name, 
      'type' => 'list_boolean',
      'settings' => array(
	'allowed_values' =>array(
	'0'=>'',
	'1'=>'Starred'
	),
	'allowed_values_function' => '',
      ),
    );

    field_create_field($field);
    $instance = array(
      'field_name' => $field_name, 
      'entity_type' => 'comment', 
      'label' => 'Starred', 
      'bundle' => 'comment_node_live_parcel', 
      'required' => FALSE,
      'description' => "Select this field to get admin's attention",
      'widget' => array(
        'type' => 'options_onoff',
        'settings'=>array('display_label'=>true),
      ), 
      'display' => array(
        'default' => array(
          'label' => 'hidden',
        ),
      ),
    );
    field_create_instance($instance);
  }



  //add field_gps
  $field_name = 'field_gps';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name, 
      'type' => 'location',
      'settings'=> array(
				'location_settings' => array(
					'form' => array(
						'fields' => array(
							'name' => array(
								'collect' => '0',
					   	),
							'company' => array(
                'collect' => '0',
              ),
              'street' => array(
                'collect' => '0',
              ),
              'additional' => array(
                'collect' => '0',
              ),
              'city' => array(
                'collect' => '0',
              ),
              'province' => array(
                'collect' => '0',
              ),
              'postal_code' => array(
                'collect' => '0',
              ),
              'country' => array(
                'collect' => '0',
              ),
              'phone' => array(
                'collect' => '0',
              )
					)				
				)			
			)
    )
   );
    field_create_field($field);
    $instance = array(
      'field_name' => $field_name, 
      'entity_type' => 'comment', 
      'label' => 'GPS', 
      'bundle' => 'comment_node_live_parcel', 
      'required' => FALSE,
      'description' => 'GPS coordinate reported by mobile',
      'widget' => array(
        'type' => 'location',
      ), 
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'location_map',
        ),
      ),
    );
    field_create_instance($instance);
  }

  //add field_photo
  $field_name = 'field_photo';
  if (!field_info_field($field_name)) {
    $field = array(
      'field_name' => $field_name,
      'type' => 'image',
    );
    field_create_field($field);
    $instance = array(
      'field_name' => $field_name, 
      'entity_type' => 'comment', 
      'label' => 'Image', 
      'bundle' => 'comment_node_live_parcel', 
      'required' => FALSE,
			'settings' => array(
			'file_directory' =>'liveparcels',
				),
      'description' => 'For signature on delivery or photo taken for parcel left without signature (authority to leave).',
      'widget' => array(
        'type' => 'image_image',
        'settings' => array(				
					
          'preview_image_style' => 'medium',
        ),
      ),
      'display' => array(
        'default' => array(
          'label' => 'hidden',
          'type' => 'colorbox',
					'settings'=>array(
					'colorbox_node_style'=>'medium',
			),
        ),
      ),
    );
    field_create_instance($instance);
  }

}

