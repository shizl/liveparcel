<?php
/**
 * Implements hook_menu().
 */
function lp_address_menu() {
  $items = array();
 $items['admin/liveparcels/lp_address_country_setting'] = array(
    'title' => 'Parcels Country code setting',
    'description' => 'Customize the Parcels Country code setting.',
    'page callback' => 'drupal_get_form',
    'page arguments'=>array('lp_address_country_setting_form'),
    'access arguments' => array('administer actions'),
    'weight' => -13,
   'file' => 'lp_address.inc',
  );
  $items['liveparcels/lp_address_update_render/ajax'] = array(
   'title' => 'lp_address_update_render ',
    'description' => 'lp_address_update_render.',
    'page callback' => 'lp_address_update_render',
    'access callback' => true,
    'menu_name'=>'liveparcels',
  );
  return $items;
}


/*
 * parceal address view function
 * */
function lp_address_address_view($parcel_info,$parcel_type,$key){
	global $user;
     	$options = array();
       array_push($options,'Select one...');
       $pdata=$parcel_type=="pickup" ? $parcel_info['parcels'][$key]['postfrom']:$parcel_info['parcels'][$key]['postto'];
       $pdata= explode('_',$pdata);
    $post_code=$pdata[2];//postal code
      $countryinfo=lp_address_get_country_info();//country id and name
      $parcel_array=lp_address_get_parcel_address_filter($post_code);
    $zone_id=lp_address_get_zone_id($pdata[1]);//zone_id
	 if ($user->uid && $addresses = lp_address_get_uc_address_book($user->uid,$parcel_array,$zone_id,$post_code)) {
          foreach($addresses as $adr){
            $options[$parcel_type.'_'.$key.'_'.$adr->aid] =($adr->address_name<>'' ?  '('.$adr->address_name.') ':' ').$adr->company.', '.$adr->first_name.' '.$adr->last_name.', '.$adr->city.', '.$adr->street1;
          }
        $contents['select_address'] = array(
          '#type' => 'select', 
          '#title' => t('Select addresses'), 
          '#attributes' => array('class'=>array('parcel_select_address')),
          '#options' => $options, 
        );
       }
            if(count($parcel_info['parcels'])>1){
            if($parcel_info['ptype']==1 && $parcel_type=='pickup' ){
                $parcel_select=array();
               foreach($parcel_info['parcels'] as $p=>$parcel){
                   $parcel_select[$parcel_type.'_'.$key.'_'.$p]=$parcel['parcelnum'];
                }
                $contents['use_parcel']=array('#type' => 'select', 
                '#title' => t('Use addresses as '), 
                 '#attributes' => array('class'=>array('parcel_use_parcel')),
                '#options' =>$parcel_select,'#default_value'=>$parcel_type.'_'.$key.'_'.$key ); 
            }
             if($parcel_info['ptype']==2 && $parcel_type=='delivery' ){
                $parcel_select=array();
               foreach($parcel_info['parcels']  as $p=>$parcel){
                   $parcel_select[$parcel_type.'_'.$key.'_'.$p]=$parcel['parcelnum'];
                }
                $contents['use_parcel']=array('#type' => 'select', 
                '#title' => t('Use addresses as '), 
                '#attributes' => array('class'=>array('parcel_use_parcel')),
                '#options' =>$parcel_select,'#default_value'=>$parcel_type.'_'.$key.'_'.$key ); 
            }
          
      }
      $contents['address'] = array('first_name'=>array(
    '#type' => 'textfield',
    '#title' => t('First name').' <span class="form-required" title="This field is required.">*</span>',
    '#attributes' => array('class'=>array($parcel_type.'_first_name')),
    '#default_value' =>'',
    '#maxlength' => 100,

  ),'last_name'=>array(
    '#type' => 'textfield',
    '#title' => t('Last name').' <span class="form-required" title="This field is required.">*</span>',
    '#attributes' => array('class'=>array($parcel_type.'_last_name')),
    '#default_value' =>'',
    '#maxlength' => 100,

  ),'company'=>array(
    '#type' => 'textfield',
    '#title' => t('Company'),
    '#attributes' => array('class'=>array($parcel_type.'_company')),
    '#default_value' =>'',
    '#maxlength' => 100,
  ),'street1'=>array(
    '#type' => 'textfield',
    '#title' => t('Street address').' <span class="form-required" title="This field is required.">*</span>',
    '#default_value' =>'',
    '#maxlength' => 100,
    '#attributes' => array('class'=>array($parcel_type.'_street1')),
  ),'street2'=>array(
    '#type' => 'textfield',
    '#default_value' =>'',
    '#maxlength' => 100,
'#attributes' => array('class'=>array($parcel_type.'_street2')),
  ),'parcel_data'=>array('#markup'=>'<div class="parcel_data"><strong>City:</strong> '. $parcel_array['locality'].'&nbsp;&nbsp;&nbsp;<strong>State/Province:</strong> '. $pdata[1].' &nbsp;&nbsp;&nbsp;<strong>Country:</strong> '.$countryinfo['country_name'].' &nbsp;&nbsp;&nbsp;<strong>Postal code:</strong> '.$post_code.'</div>'),'city'=>array(
    '#type' => 'hidden',
    '#title' => t('City'),
    '#default_value' =>$parcel_array['locality'],
    '#maxlength' => 100,
  ), 'zone'=>array(
    '#type' => 'hidden',
    '#title' => t('State/Province'),
    '#default_value' =>$zone_id,
    '#maxlength' => 100,
 
  ),'country'=>array(
    '#type' => 'hidden',
    '#title' => t('Country'),
    '#default_value' =>$countryinfo['country_id'],
    '#maxlength' => 100,
  ),'country_code'=>array(
    '#type' => 'hidden',
    '#title' => t('Country Code'),
    '#default_value' =>$countryinfo['country_iso_code_2'],
    '#maxlength' => 4,
  ),'postal_code'=>array(
    '#type' => 'hidden',
    '#title' => t('Postal code'),
    '#default_value' =>$post_code,
    '#maxlength' => 100,
  ),'phone'=>array(
    '#type' => 'textfield',
    '#title' => t('Phone number'),
    '#attributes' => array('class'=>array($parcel_type.'_phone')),
    '#default_value' =>'',
    '#maxlength' => 100,

  ),'address_name'=>array(
    '#type' => 'hidden',
    '#value' =>'',
    '#maxlength' => 4,
  ),'default_shipping'=>array(
    '#type' => 'hidden',
    '#value' =>'0',
    '#maxlength' => 4,
  ),'default_billing'=>array(
    '#type' => 'hidden',
    '#value' =>'0',
    '#maxlength' => 4,
  )  
      );
 

  return  $contents;
}
/*address_update($address,$uid)
 * address parel update
 * $address :address info,$uid: order user id
 * */
function lp_address_address_update($address,$uid){

    if(!empty($address['select_address']) && $address['select_address']>0){
        $address_id=$address['select_address'];
       $addressbook =UcAddressesAddressBook::loadAddress($address_id);
       $addressbook->setField('first_name', $address['address']['first_name']);
       $addressbook->setField('last_name', $address['address']['last_name']);
       $addressbook->setField('company', $address['address']['company']);
       $addressbook->setField('street1', $address['address']['street1']);
        $addressbook->setField('street2', $address['address']['street2']);
       $addressbook->setField('city', $address['address']['city']);
        $addressbook->setField('postal_code', $address['address']['postal_code']);
       $addressbook->setField('zone', $address['address']['zone']);
       $addressbook->setField('country', $address['address']['country']);
       $addressbook->setField('phone', $address['address']['phone']);
       $addressbook->save();
    }else{
       $addressbook=UcAddressesAddressBook::get($uid)->addAddress();
       $addressbook->setField('first_name', $address['address']['first_name']);
       $addressbook->setField('last_name', $address['address']['last_name']);
       $addressbook->setField('company', $address['address']['company']);
       $addressbook->setField('street1', $address['address']['street1']);
        $addressbook->setField('street2', $address['address']['street2']);
       $addressbook->setField('city', $address['address']['city']);
        $addressbook->setField('postal_code', $address['address']['postal_code']);
       $addressbook->setField('zone', $address['address']['zone']);
       $addressbook->setField('country', $address['address']['country']);
       $addressbook->setField('phone', $address['address']['phone']);
       $addressbook->setField('default_shipping', '0');
       $addressbook->setField('default_billing', '0');
       $addressbook->save();
       $address_id=$addressbook->getField('aid');
    }
      return $address_id;
}

/*location_update($address)
 * $address :address info
 * */
function lp_address_location_update($address){
        $lid = db_insert('location') 
        ->fields(array(
          'name' => $address['address']['first_name'].' '.$address['address']['last_name'],
          'additional'=>$address['address']['street1'], 
          'city' =>$address['address']['city'],
          'province'=>$address['address']['zone'],
           'postal_code'=>$address['address']['postal_code'],
          'country' =>$address['address']['country_code'] ,
          'latitude'=>'0.000000',
          'longitude'=>'0.000000',
          'source'=>'0',
          'is_primary'=>'0',
        ))->execute();
      return $lid;
      
}

/*
 * get parcel address book
 * $parcel_type 
 * */
function  lp_address_get_uc_address_book($uid,$parcel_array,$zone_id,$post_code){
      $address = db_query("SELECT * FROM {uc_addresses} WHERE `uid`='$uid' AND `postal_code`='".$parcel_array['pcode']."' AND `city`='".$parcel_array['locality']."' AND `zone`='".$zone_id."'");
    return $address;
}
/*get parcel postcode
 * $post_id
 * */
function lp_address_get_parcel_address_filter($post_id){
    	$result= db_query("SELECT * FROM `{liveparcels_zone_post}` WHERE `pcode`='$post_id'")->fetchAssoc();
        return $result;
}
function lp_address_get_country_info($country_id='8888'){
    $countryinfo=db_query("SELECT `country_id`,`country_name`,`country_iso_code_2`,`country_iso_code_3` FROM `uc_countries` WHERE `country_id`='$country_id'")->fetchAssoc();
    return   $countryinfo;
    }
function lp_address_get_zone_id($zone_name=''){
    $zone_id=db_query("SELECT `zone_id` FROM `uc_zones` WHERE `zone_name`='$zone_name'")->fetchField();
    return   $zone_id;
}
function lp_address_update_render(){
    $address_id=$_REQUEST['address_id'];
     $address = db_query("SELECT * FROM {uc_addresses} WHERE `aid`='".$address_id."'")->fetchAssoc();
     echo json_encode($address);
     exit;
}
