<?php
/**
 * @file
 * Contains global Live Parcels functions and store administration functionality.
 *
 * The store module is a container of sorts for various helper functions used
 * in different parts of the Ubercart core.  It also provides screens and
 * settings pages for use in store administration.
 */


/**
 * Implements hook_uc_checkout_pane().
 create liveparcels extra pane 
 * */
function lp_parcel_uc_checkout_pane_parcel_pickup($op, $order, $form = NULL, &$form_state = NULL){
        $parcels=liveparcels_getparcelsdata();
   
     if($parcels){
      switch ($op) {
        case 'view':        
       $pickup_extra=array();
        if($parcels['ptype']=="1"){
            for($f=0;$f<count($parcels['parcels']);$f++){
               $pickup_extra[$f]=array('parcel_title'=>array('#markup'=>'<h2>'.$parcels['parcels'][$f]['parcelnum'].'</h2>'),'field_parcel_pickup_address_data'=>lp_parcel_get_parcel_address($parcels,'pickup',$f),
               'field_pick_up_time'=> array(
                  '#title' => t('Pickup time'),
                  '#type' => 'date_popup', 
                  '#date_format' => 'm/d/Y', 
                  '#date_year_range' => '0:+2', 
                  '#required' => TRUE,
                  '#default_value' => date('Y-m-d'), // Default value must be in 'Y-m-d' format.
                ),'field_pick_up_time_ampm'=>array(
       '#type' => 'select',
       '#title' => '',
       '#options' => array(
          'AM' => t('AM'),
         'PM' => t('PM'),
       ),
       '#default_value' => 'AM',
   ),'field_customer_reference'=>array(
    '#type' => 'textfield',
    '#title' => t('Customer reference'),
    '#default_value' =>'',
    '#description' => t('Enter any reference number here to help you find this item.')
  ),'field_cash_to_collect'=>array(
    '#type' => 'textfield',
    '#title' => t('Cash to collect'),
    '#default_value' =>'',
    '#description' => t('Enter the amount of cash you would like us to collect on your behalf and deliver to you.')
  ),'field_pickup_note'=>array(
'#title' => t('Pickup Note'),
'#type' => 'textarea',
'#description' => t('Enter any information here that would assist with the pick up process'),
'#default_value' =>'',
));
            }

        }else{
         $pickup_extra[0]=array('field_parcel_pickup_address_data'=>lp_parcel_get_parcel_address($parcels,'pickup',0),'field_pick_up_time'=> array(
                  '#title' => t('Pickup time'),
                  '#type' => 'date_popup', 
                  '#date_format' => 'm/d/Y', 
                  '#date_year_range' => '0:+2', 
                  '#required' => TRUE,
                  '#default_value' => date('Y-m-d'), // Default value must be in 'Y-m-d' format.
                ),'field_pick_up_time_ampm'=>array(
       '#type' => 'select',
       '#title' => '',
       '#options' => array(
          'AM' => t('AM'),
         'PM' => t('PM'),
       ),
       '#default_value' => 'AM',
   ),'field_customer_reference'=>array(
    '#type' => 'textfield',
    '#title' => t('Customer reference'),
    '#default_value' =>'',
    '#maxlength' => 100,
    '#description' => t('Enter any reference number here to help you find this item.')
  ),'field_cash_to_collect'=>array(
    '#type' => 'textfield',
    '#title' => t('Cash to collect'),
    '#default_value' =>'',
    '#maxlength' => 100,
    '#description' => t('Enter the amount of cash you would like us to collect on your behalf and deliver to you.')
  ),'field_pickup_note'=>array(
'#title' => t('Pickup Note'),
'#type' => 'textarea',
'#description' => t('Enter any information here that would assist with the pick up process'),
'#default_value' =>'',
));
        }
        $contents=$pickup_extra;
          return array('contents' => $contents);
      }
    }
}
/**
 * Implements hook_uc_checkout_pane().
 create liveparcels extra pane 
 * */
function lp_parcel_uc_checkout_pane_parcel_delivery($op, $order, $form = NULL, &$form_state = NULL){
        $parcels=liveparcels_getparcelsdata();
     if($parcels){
      switch ($op) {
        case 'view':      
             
        if(module_exists('lp_address')){  
          drupal_add_js(drupal_get_path('module', 'lp_address') . '/lp_address.js');
          }
    $delivery_extra=array();
        if($parcels['ptype']=="1"){
             $delivery_extra[0]=array('field_parcel_delivery_address_data'=>lp_parcel_get_parcel_address($parcels,'delivery',0),'field_authority_to_leave'=>array(
      '#type' =>'checkbox', 
  '#title' => t('Authority to leave'),
  ),'field_delivery_note'=>array(
'#title' => t('Delivery Note'),
'#type' => 'textarea',
'#description' => t('Enter any information here that would assist with the delivery process'),
'#default_value' =>'',
));
        }else{
            for($f=0;$f<count($parcels['parcels']);$f++){
                   $delivery_extra[$f]=array('parcel_title'=>array('#markup'=>'<h2>'.$parcels['parcels'][$f]['parcelnum'].'</h2>'),'field_parcel_delivery_address_data'=>lp_parcel_get_parcel_address($parcels,'delivery',$f),
                   'field_authority_to_leave'=>array(
      '#type' =>'checkbox', 
  '#title' => t('Authority to leave'),
  ),'field_delivery_note'=>array(
'#title' => t('Delivery Note'),
'#type' => 'textarea',
'#description' => t('Enter any information here that would assist with the delivery process'),
'#default_value' =>'',
));
            }
        }
           $contents=$delivery_extra;
          
          return array('contents' => $contents);
        case 'process':
        if(module_exists('lp_address')){  
          drupal_add_js(drupal_get_path('module', 'lp_address') . '/lp_address.js');
          }
        $pickupdata=array();
        $deliverydata=array();
           if($parcels['ptype']==1){
              
                 foreach($parcels['parcels'] as $key=>$val){
                    //$pickup_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_pickup'][$key]['field_parcel_pickup_address_data']);
                    $pickupdata[$key]=@array('field_parcel_pickup_address'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_parcel_pickup_address_data'],'field_pick_up_time'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_pick_up_time'],'field_pick_up_time_ampm'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_pick_up_time_ampm'],'field_customer_reference'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_customer_reference'],'field_cash_to_collect'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_cash_to_collect'],'field_pickup_note'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_pickup_note']);
                }
                // $delivery_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_delivery'][0]['field_parcel_delivery_address_data']);
                $deliverydata[0]=@array('field_parcel_delivery_address'=>$form_state['values']['panes']['parcel_delivery'][0]['field_parcel_delivery_address_data'],'field_authority_to_leave'=>$form_state['values']['panes']['parcel_delivery'][0]['field_authority_to_leave'],'field_delivery_note'=>$form_state['values']['panes']['parcel_delivery'][0]['field_delivery_note']);
            }else{

               // $pickup_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_pickup'][0]['field_parcel_pickup_address_data']);
                $pickupdata[0]=@array('field_parcel_pickup_address'=>$form_state['values']['panes']['parcel_pickup'][0]['field_parcel_pickup_address_data'],'field_pick_up_time'=>$form_state['values']['panes']['parcel_pickup'][0]['field_pick_up_time'],'field_pick_up_time_ampm'=>$form_state['values']['panes']['parcel_pickup'][0]['field_pick_up_time_ampm'],'field_customer_reference'=>$form_state['values']['panes']['parcel_pickup'][0]['field_customer_reference'],'field_cash_to_collect'=>$form_state['values']['panes']['parcel_pickup'][0]['field_cash_to_collect'],'field_pickup_note'=>$form_state['values']['panes']['parcel_pickup'][0]['field_pickup_note']);
                 foreach($parcels['parcels'] as $key=>$val){
                    //$delivery_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_delivery'][$key]['field_parcel_delivery_address_data']);
                    $deliverydata[$key]=@array('field_parcel_delivery_address'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_parcel_delivery_address_data'],'field_authority_to_leave'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_authority_to_leave'],'field_delivery_note'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_delivery_note']);
                }
        }
        $parceldata=array('pickupdata'=>$pickupdata,'deliverydata'=>$deliverydata);
         db_update('liveparcels_order')->fields(array('extra_info' => serialize($parceldata)))->condition('order_id',$order->order_id , '=')->execute();
   case 'review':   
      }
    }
}
/*
 * get_parcel_address($parcel_info,'pickup')
 * parcels info,parcels type
 * */
function lp_parcel_get_parcel_address($parcel_info,$parcel_type='pickup',$key='0'){
        if(module_exists('lp_address')){
            return  lp_address_address_view($parcel_info,$parcel_type,$key);
        }else{
        return array();    
        }
}
/*
 * update_parcel_address($address)
 * parcels info,parcels type
 * */
function lp_parcel_update_parcel_address($address){
        if(module_exists('lp_address')){
            return  lp_address_address_update($address);
        }else{
        return 0;    
        }
}
/*
 * get_parcel_address_update()
 * parcels info,parcels type
 *
function lp_parcel_get_parcel_address_update($address_id,$address){
        if(module_exists('lp_address')){
            return  lp_address_address_update($address_id,$address);
        }else{
        return array();    
        }
        
} */
function theme_lp_parcel_table($variables) {
    $parcels = $variables['items'];
 
  // Set up table rows.
    foreach ($parcels['parcels'] as $parcel ) {
        
      $rows[] = array(
        array('data' => $parcel['parcelnum'], 'class' => array('products')),
        array('data' => $parcel['dimfirst'].'x'.$parcel['dimsecond'].'x'.$parcel['dimthree'].' cm','class' => array('price')),
     
      );
    }

  // Add the subtotal as the final row.
    $rows[] = array(
      'data' => array(
        // One cell
        array(
          'data' => array(
            '#theme' => 'uc_price',
            '#prefix' => '<span id="subtotal-title">' . t('Subtotal:') . '</span> ',
            '#price' => $parcels['totals'],
          ),
          // Cell attributes
          'colspan' => 4,
          'class' => array('subtotal'),
        ),
      ),
      // Row attributes
      'class' => array('subtotal'),
    );
  return theme('table', array( 'rows' => $rows, 'attributes' => array('class' => array('lp_parcel_table'))));
}
/**
 * Implements hook_uc_checkout_pane().
 */
function lp_parcel_uc_checkout_pane() {
   
      $panes['parcel_pickup'] = array(
      'callback' => 'lp_parcel_uc_checkout_pane_parcel_pickup',
    'title' => t('Parcel pickup extra contents'),
    'desc' => t("Display the contents of a customer's shopping cart."),
      'enabled' => FALSE,
      'weight' => 4,
      );
      $panes['parcel_delivery'] = array(
      'callback' => 'lp_parcel_uc_checkout_pane_parcel_delivery',
    'title' => t('Parcel delivery extra contents'),
    'desc' => t("Display the contents of a customer's shopping cart."),
      'enabled' => FALSE,
      'weight' => 5,
      );
       
  return $panes;    
}
function lp_parcel_uc_checkout_complete($order, $account) {
      $parcels=liveparcels_getparcelsdata();
            if(module_exists('lp_discount')){
            $parcels['discount']=lp_discount_get_pricing($parcels['totals']);
            $order_total=$parcels['totals']-$parcels['discount'];
        }else{
            $order_total=$parcels['totals'];
        }
     db_update('uc_orders')->fields(array('order_total' => $order_total))->condition('order_id',$order->order_id , '=')->execute();
    db_update('uc_order_products')->fields(array('price' => $parcels['totals']))->condition('order_id',$order->order_id , '=')->execute();
    $order_id=$order->order_id;
    $parceldata=lp_parcel_get_parcel_data($order_id);
    $parcel_info=$parceldata['parcel_info'];
    $extra_info=$parceldata['extra_info'];
    $node_revision="";
    
    $field_parcel_size="";
    $field_parcel_weight="";
    $field_parcel_price="";
    $field_parcel_order_id="";
    $field_parcel_pickup_address="";
    $field_parcel_delivery_address="";
    $field_pick_up_time="";
    $field_pick_up_time_ampm="";
    $field_customer_reference="";
    $field_cash_to_collect="";
    $field_pickup_note="";
    $field_authority_to_leave="";
    $field_delivery_note="";
    foreach($parcel_info['parcels'] as $key=>$parcel){
       $nid = db_insert('node') 
        ->fields(array(
          'uid' => 1,
          'type'=>'live_parcel', 
          'title' => 'order-'.$order_id.'-'.$parcel['parcelnum'],
          'language'=>'und',
           'status'=>1,
          'created' => REQUEST_TIME,
        ))->execute();
        db_update('node') 
        ->fields(array(
         'vid'=>$nid,
          'changed' => REQUEST_TIME,
        ))->condition('nid',$nid, '=')->execute();
  
        $node_revision.=($node_revision != "" ? ",":"")."($nid, $nid, 1, '".'order-'.$order_id.'-'.$parcel['parcelnum']."', '',".REQUEST_TIME.", 1, 0, 1, 0)";
        
         $field_parcel_size.=($field_parcel_size != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$parcel['dimfirst'].'x'.$parcel['dimsecond'].'x'.$parcel['dimthree'].' cm'."', NULL)";
         
          $field_parcel_weight.=($field_parcel_weight != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$parcel['weighttext']."', NULL)";
          
          $field_parcel_price.=($field_parcel_price != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".str_replace('$','',$parcel['price'])."')";
          
          $field_parcel_order_id.=($field_parcel_order_id != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$order_id."', NULL)";
          if($parcel_info['ptype']=='1' ){
              
                $pickup_address_id=lp_parcel_update_parcel_address($extra_info['pickupdata'][$key]['field_parcel_pickup_address']);
              $field_parcel_pickup_address.=($field_parcel_pickup_address != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$pickup_address_id."')";
               $delivery_address_id=$key>0 ? $delivery_address_id : lp_parcel_update_parcel_address($extra_info['deliverydata'][0]['field_parcel_delivery_address']);
              $field_parcel_delivery_address.=($field_parcel_delivery_address != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$delivery_address_id."')";
              
              $field_pick_up_time.=($field_pick_up_time != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][$key]['field_pick_up_time']."')";
              
              $field_pick_up_time_ampm.=($field_pick_up_time_ampm != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][$key]['field_pick_up_time_ampm']."')";
              
              $field_customer_reference.=($field_customer_reference != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][$key]['field_customer_reference']."', NULL)";
              
              $field_cash_to_collect.=($field_cash_to_collect != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][$key]['field_cash_to_collect']."', NULL)";
              
              $field_pickup_note.=($field_pickup_note != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][$key]['field_pickup_note']."', NULL)";
          
              $field_authority_to_leave.=($field_authority_to_leave != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['deliverydata'][0]['field_authority_to_leave']."')";
              
              $field_delivery_note.=($field_delivery_note != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['deliverydata'][0]['field_delivery_note']."', NULL)";
            }else{
                 $pickup_address_id=$key>0 ? $pickup_address_id : lp_parcel_update_parcel_address($extra_info['pickupdata'][0]['field_parcel_pickup_address']);
                $field_parcel_pickup_address.=($field_parcel_pickup_address != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$pickup_address_id."')";
               $delivery_address_id=lp_parcel_update_parcel_address($extra_info['deliverydata'][$key]['field_parcel_delivery_address']);
               
              $field_parcel_delivery_address.=($field_parcel_delivery_address != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$delivery_address_id."')";
              
              $field_pick_up_time.=($field_pick_up_time != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][0]['field_pick_up_time']."')";
              
              $field_pick_up_time_ampm.=($field_pick_up_time_ampm != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][0]['field_pick_up_time_ampm']."')";
              
              $field_customer_reference.=($field_customer_reference != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][0]['field_customer_reference']."', NULL)";
              
              $field_cash_to_collect.=($field_cash_to_collect != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][0]['field_cash_to_collect']."', NULL)";
              
              $field_pickup_note.=($field_pickup_note != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['pickupdata'][0]['field_pickup_note']."', NULL)";
          
              $field_authority_to_leave.=($field_authority_to_leave != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['deliverydata'][$key]['field_authority_to_leave']."')";
              
              $field_delivery_note.=($field_delivery_note != "" ? ",":"")."('node', 'live_parcel', 0, '$nid', '$nid', 'und', 0, '".$extra_info['deliverydata'][$key]['field_delivery_note']."', NULL)";

          }
    }
       db_query("INSERT INTO `node_revision` (`nid`, `vid`, `uid`, `title`, `log`, `timestamp`, `status`, `comment`, `promote`, `sticky`) VALUES".$node_revision.";
       INSERT INTO `field_data_field_parcel_size` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_size_value`, `field_parcel_size_format`) VALUES".$field_parcel_size.";
       INSERT INTO `field_revision_field_parcel_size` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_size_value`, `field_parcel_size_format`) VALUES".$field_parcel_size.";");
        db_query("INSERT INTO `field_data_field_parcel_weight` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_weight_value`, `field_parcel_weight_format`) VALUES".$field_parcel_weight.";
       INSERT INTO `field_revision_field_parcel_weight` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_weight_value`, `field_parcel_weight_format`) VALUES".$field_parcel_weight.";");
        db_query("INSERT INTO `field_data_field_parcel_price` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_price_value`) VALUES".$field_parcel_price.";
       INSERT INTO `field_revision_field_parcel_price` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_price_value`) VALUES".$field_parcel_price.";");
        db_query("INSERT INTO `field_data_field_parcel_order_id` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_order_id_value`, `field_parcel_order_id_format`) VALUES".$field_parcel_order_id.";
       INSERT INTO `field_revision_field_parcel_order_id` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_order_id_value`, `field_parcel_order_id_format`) VALUES".$field_parcel_order_id.";");
        db_query("INSERT INTO `field_data_field_parcel_pickup_address` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_pickup_address_value`) VALUES".$field_parcel_pickup_address.";
       INSERT INTO `field_revision_field_parcel_pickup_address` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_pickup_address_value`) VALUES".$field_parcel_pickup_address.";");
        db_query("INSERT INTO `field_data_field_parcel_delivery_address` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_delivery_address_value`) VALUES".$field_parcel_delivery_address.";
       INSERT INTO `field_revision_field_parcel_delivery_address` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_parcel_delivery_address_value`) VALUES".$field_parcel_delivery_address.";");
        db_query("INSERT INTO `field_data_field_pick_up_time` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_pick_up_time_value`) VALUES".$field_pick_up_time.";
       INSERT INTO `field_revision_field_pick_up_time` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_pick_up_time_value`) VALUES".$field_pick_up_time.";");
        db_query("INSERT INTO `field_data_field_pick_up_time_ampm` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_pick_up_time_ampm_value`) VALUES".$field_pick_up_time_ampm.";
       INSERT INTO `field_revision_field_pick_up_time_ampm` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_pick_up_time_ampm_value`) VALUES".$field_pick_up_time_ampm.";");
        db_query("INSERT INTO `field_data_field_customer_reference` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_customer_reference_value`, `field_customer_reference_format`) VALUES".$field_customer_reference.";
       INSERT INTO `field_revision_field_customer_reference` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_customer_reference_value`, `field_customer_reference_format`) VALUES".$field_customer_reference.";");
        db_query("INSERT INTO `field_data_field_cash_to_collect` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_cash_to_collect_value`, `field_cash_to_collect_format`) VALUES".$field_cash_to_collect.";
       INSERT INTO `field_revision_field_cash_to_collect` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_cash_to_collect_value`, `field_cash_to_collect_format`) VALUES".$field_cash_to_collect.";");
        db_query("INSERT INTO `field_data_field_pickup_note` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_pickup_note_value`, `field_pickup_note_format`) VALUES".$field_pickup_note.";
       INSERT INTO `field_revision_field_pickup_note` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_pickup_note_value`, `field_pickup_note_format`) VALUES".$field_pickup_note.";");
        db_query("INSERT INTO `field_data_field_authority_to_leave` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_authority_to_leave_value`) VALUES".$field_authority_to_leave.";
       INSERT INTO `field_revision_field_authority_to_leave` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_authority_to_leave_value`) VALUES".$field_authority_to_leave.";");
        db_query("INSERT INTO `field_data_field_delivery_note` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_delivery_note_value`, `field_delivery_note_format`) VALUES".$field_delivery_note.";
       INSERT INTO `field_revision_field_delivery_note` (`entity_type`, `bundle`, `deleted`, `entity_id`, `revision_id`, `language`, `delta`, `field_delivery_note_value`, `field_delivery_note_format`) VALUES".$field_delivery_note.";");
 $cart_id=uc_cart_get_id();
 db_delete("liveparcels_cart")->condition('cart_id',$cart_id, '=')->execute(); 
}
function lp_parcel_get_parcel_data($order_id){
    $pdata=db_query("SELECT `parcel_info`,`extra_info` FROM `liveparcels_order` WHERE `order_id`='$order_id'")->fetchAssoc();
    $parceldata=array("parcel_info"=>unserialize($pdata['parcel_info']),"extra_info"=>unserialize($pdata['extra_info']));
    return  $parceldata;    
}

/*if product_id is liveparcel,checkout cart pane hiddren*/
function lp_parcel_uc_checkout_pane_alter(&$panes) {
     $parcels=liveparcels_getparcelsdata();
     if($parcels){
          $panes['parcel_pickup']['enabled'] = true;
          $panes['parcel_delivery']['enabled'] = true;
    }else{
        $panes['parcel_pickup']['enabled'] = false;
          $panes['parcel_delivery']['enabled'] = false;
       
    }
}


