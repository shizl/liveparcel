<?php
/**
 * @file
 * Contains global Live Parcels functions and store administration functionality.
 *
 * The store module is a container of sorts for various helper functions used
 * in different parts of the Ubercart core.  It also provides screens and
 * settings pages for use in store administration.
 */

/**
 * Implements hook_menu().
 */
include "sites/all/libraries/phpqrcode/qrlib.php";

define('PHPQRCODE_MIN_PLUGIN_VERSION', '1.1.4');

function lp_parcel_menu(){
    $items=array();
    $items['node/%node/order_view'] = array(
    'title' => 'View Order',
    'menu_name'=>'liveparcels_view_order',
    'description' => ' View Order.',
    'page callback' => array('lp_parcel_order_view'),
    'page arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'access callback' =>'lp_access',
    'access arguments' =>array(1),
  );

    $items['node/%node/print'] = array(
    'title' => 'Print label',
    'menu_name'=>'liveparcels_print',
    'description' => 'Print Pdf',
    'page callback' => array('lp_parcel_print_pdf'),
    'page arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'access callback' =>'lp_access_print',
    'access arguments' =>array(1),
    'file'=>'print.page.inc',
    'weight'=>10,	
  );

  return $items;
}


function lp_access_print($node){

global $user;

  $arr = array();
  $arrname = array(); 
  $roles = db_query('select rid from {users_roles} where uid = '.$user->uid);
  foreach($roles as $role){
  $arr[] = $role->rid;
  $rname = db_query('select name from {role} where rid='.$role->rid)->fetchfield();
  $arrname[] = $rname;		
  }
   if(!empty($node->field_fee_status['und'][0]['value'])){
     $fee_status =  $node->type== 'live_parcel' ? $node->field_fee_status['und'][0]['value']:'none';
   }else{
     $fee_status = 'none';
   }
   if(($user->uid == $node->uid ||in_array(3,$arr)||in_array('driver',$arrname))&&$node->type=="live_parcel"&&$fee_status=="Confirmed"){
     return true;
   }else{
     return false;
   } 

}

function lp_access($node){

global $user;

  $arr = array();
  $arrname = array(); 
  $roles = db_query('select rid from {users_roles} where uid = '.$user->uid);
  foreach($roles as $role){
  $arr[] = $role->rid;
  $rname = db_query('select name from {role} where rid='.$role->rid)->fetchfield();
  $arrname[] = $rname;		
  }
   if(($user->uid == $node->uid ||in_array(3,$arr)||in_array('driver',$arrname))&&$node->type=="live_parcel"){
     return true;
   }else{
     return false;
   } 
}

function lp_parcel_order_view($node){
 
  $order_id=isset($node->field_parcel_order_id[$node->language][0]['value']) && $node->field_parcel_order_id[$node->language][0]['value'] > 0 ? $node->field_parcel_order_id[$node->language][0]['value']:0;
  if($order_id>0 ){
    header("Location: /user/".$node->uid."/orders/".$order_id);
    exit;
    }else{
        drupal_set_message('This node is not a live parcel. so it no order id', 'error');
       header("Location: ".$_SERVER["HTTP_HOST"]."/node/".$node->nid);  
    }
}


/**
 * Implements hook_uc_checkout_pane().
 create liveparcels extra pane 
 * */
function lp_parcel_uc_checkout_pane_parcel_pickup($op, $order, $form = NULL, &$form_state = NULL){
  $orderid = 0;
   global $user;
	 if(isset($_SESSION['admin_order'])||$user->uid ==1){
	   $minDate = '0D';
	   $default_minDate = date("Y-m-d",time(date("Y-m-d"))+3600*24*0);
           $check_mindate = strtotime(date("Y-m-d"))+3600*24*0;

	  }else{
	   $minDate = variable_get('liveparcels_pickup_time',0)."D";
	   $default_minDate = date("Y-m-d",time(date("Y-m-d"))+3600*24*variable_get('liveparcels_pickup_time',0));
           $check_mindate = strtotime(date("Y-m-d"))+3600*24*variable_get('liveparcels_pickup_time',0);
          }
        $parcels=liveparcels_getparcelsdata();
   drupal_add_css(drupal_get_path('module', 'lp_parcel') . '/lp_parcel.css',array('group' => CSS_DEFAULT, 'every_page' => TRUE));
     if($parcels){
      switch ($op) {
        case 'view':
  isset($_SESSION['lp_order']) ? $orderid = $_SESSION['lp_order']:$order->order_id;      
            $parceldata=lp_parcel_get_parcel_data($orderid);
    $extra_info=$parceldata['extra_info'];
    
    if($user->uid !==0){
      date_default_timezone_set($user->timezone<>"" ? $user->timezone:variable_get('date_default_timezone'));
    }else{
      date_default_timezone_set(variable_get('date_default_timezone'));
    }



    if(is_array($extra_info) && count($extra_info)>0){
        $pickup_extra=array();
          if($parcels['ptype']=="1"){
            for($f=0;$f<count($parcels['parcels']);$f++){
               $pickup_extra[$f]=array('parcel_title'=>array('#markup'=>'<h2>'.$parcels['parcels'][$f]['parcelnum'].'</h2>'),'field_parcel_pickup_address_data'=>lp_parcel_get_parcel_address($parcels,'delivery',$f,$extra_info['pickupdata'][$f]['field_parcel_pickup_address'],$user),
               'field_pick_up_time'=> array(
                  '#title' => t('Schedule pickup date/shift'),
                  '#type' => 'date_popup', 
                  '#date_format' => 'm/d/Y', 
                  '#date_year_range' => '0:+2', 
                  '#datepicker_options' => array('minDate' => $minDate),
                  '#required' => TRUE,
                  '#default_value' => $extra_info['pickupdata'][$f]['field_pick_up_time'], // Default value must be in 'Y-m-d' format.
                ),'field_pick_up_time_ampm'=>array(
               '#type' => 'select',
               '#title' => '',
               '#options' => array(
                  'AM' => t('AM'),
                 'PM' => t('PM'),
               ),'#default_value' => $extra_info['pickupdata'][$f]['field_pick_up_time_ampm'],
               '#attributes' => array('class'=>array('pick_up_time_ampm')),
               ),'field_customer_reference'=>array(
                '#type' => 'textfield',
                '#title' => t('Customer reference'),
                '#default_value' =>'',
                '#description' => t('Enter any reference number here to help you find this item.')
                ),'field_cash_to_collect'=>array(
                '#type' => 'textfield',
                '#title' => t('Cash to collect ('.variable_get('uc_currency_sign','$').') '),
                '#default_value' =>$extra_info['pickupdata'][$f]['field_cash_to_collect'],
                 '#size'=>'30',
                  '#maxlength'=>'30',
                  '#attributes' => array('class'=>array('pickup_cash_to_collect')),
                '#description' => t('Enter the amount of cash you would like us to collect on your behalf and deliver to you.')
                  ),'field_pickup_note'=>array(
                '#title' => t('Pickup Note'),
                '#type' => 'textarea',
                '#description' => t('Enter any information here that would assist with the pick up process'),
                '#default_value' =>$extra_info['pickupdata'][$f]['field_pickup_note'],
                '#attributes' => array('class'=>array('pickup_note')),
                ));
            }

        }else{
                $pickup_extra[0]=array('field_parcel_pickup_address_data'=>lp_parcel_get_parcel_address($parcels,'delivery',0,$extra_info['pickupdata'][0]['field_parcel_pickup_address'],$user),'field_pick_up_time'=> array(
                  '#title' => t('Schedule pickup date/shift'),
                  '#type' => 'date_popup', 
                  '#date_format' => 'm/d/Y', 
                  '#date_year_range' => '0:+2', 
                   '#datepicker_options' => array('minDate' => $minDate),
                  '#required' => TRUE,
                  '#default_value' => $extra_info['pickupdata'][0]['field_pick_up_time'], // Default value must be in 'Y-m-d' format.
                ),'field_pick_up_time_ampm'=>array(
               '#type' => 'select',
               '#title' => '',
               '#options' => array(
                  'AM' => t('AM'),
                 'PM' => t('PM'),
               ),
               '#default_value' => $extra_info['pickupdata'][0]['field_pick_up_time_ampm'],
               '#attributes' => array('class'=>array('pick_up_time_ampm')),
               ),'field_cash_to_collect'=>array(
                '#type' => 'hiddden',
                '#title' => t('Cash to collect ('.variable_get('uc_currency_sign','$').') '),
                '#default_value' =>'',
                '#size'=>'30',
                '#maxlength'=>'30',
                '#attributes' => array('class'=>array('pickup_cash_to_collect')),
                '#description' => t('Enter the amount of cash you would like us to collect on your behalf and deliver to you.')
                  ),'field_pickup_note'=>array(
                '#title' => t('Pickup Note'),
                '#type' => 'textarea',
                '#description' => t('Enter any information here that would assist with the pick up process'),
                '#default_value' =>$extra_info['pickupdata'][0]['field_pickup_note'],
                '#attributes' => array('class'=>array('pickup_note')),
                ));
        } 
    }else{
       $pickup_extra=array();
        if($parcels['ptype']=="1"){
            for($f=0;$f<count($parcels['parcels']);$f++){
               $pickup_extra[$f]=array('parcel_title'=>array('#markup'=>'<h2>'.$parcels['parcels'][$f]['parcelnum'].'</h2>'),'field_parcel_pickup_address_data'=>lp_parcel_get_parcel_address($parcels,'delivery',$f,array(),$user),
               'field_pick_up_time'=> array(
                  '#title' => t('Pickup time'),
                  '#type' => 'date_popup', 
                  '#date_format' => 'm/d/Y', 
                  '#date_year_range' => '0:+2', 
                   '#datepicker_options' => array('minDate' => $minDate),
                  '#required' => TRUE,
                  '#default_value' =>$default_minDate, // Default value must be in 'Y-m-d' format.
                ),'field_pick_up_time_ampm'=>array(
               '#type' => 'select',
               '#title' => '',
               '#options' => array(
                  'AM' => t('AM'),
                 'PM' => t('PM'),
               ),'#default_value' => 'AM',
               '#attributes' => array('class'=>array('pick_up_time_ampm')),
               ),'field_customer_reference'=>array(
                '#type' => 'textfield',
                '#title' => t('Customer reference'),
                '#default_value' =>'',
                '#description' => t('Enter any reference number here to help you find this item.')
                ),'field_cash_to_collect'=>array(
                '#type' => 'textfield',
                '#title' => t('Cash to collect'),
                '#default_value' =>'',
                 '#size'=>'30',
                  '#maxlength'=>'30',
                  '#attributes' => array('class'=>array('pickup_cash_to_collect')),
                '#description' => t('Enter the amount of cash you would like us to collect on your behalf and deliver to you.')
                  ),'field_pickup_note'=>array(
                '#title' => t('Pickup Note'),
                '#type' => 'textarea',
                '#description' => t('Enter any information here that would assist with the pick up process'),
                '#default_value' =>'',
                '#attributes' => array('class'=>array('pickup_note')),
                ));
            }

        }else{

         

         $pickup_extra[0]=array('field_parcel_pickup_address_data'=>lp_parcel_get_parcel_address($parcels,'delivery',0,array(),$user),'field_pick_up_time'=> array(
                  '#title' => t('Pickup time'),
                  '#type' => 'date_popup', 
                  '#date_format' => 'm/d/Y', 
                  '#date_year_range' => '0:+2', 
                  '#datepicker_options' => array('minDate' =>$minDate),
                  '#required' => TRUE,
                  '#default_value' => $default_minDate, // Default value must be in 'Y-m-d' format.
                ),'field_pick_up_time_ampm'=>array(
               '#type' => 'select',
               '#title' => '',
               '#options' => array(
                  'AM' => t('AM'),
                 'PM' => t('PM'),
               ),
               '#default_value' => 'AM',
               '#attributes' => array('class'=>array('pick_up_time_ampm')),
               ),'field_cash_to_collect'=>array(
                '#type' => 'hiddden',
                '#title' => t('Cash to collect'),
                '#default_value' =>'',
                '#size'=>'30',
                '#maxlength'=>'30',
                '#attributes' => array('class'=>array('pickup_cash_to_collect')),
                '#description' => t('Enter the amount of cash you would like us to collect on your behalf and deliver to you.')
                  ),'field_pickup_note'=>array(
                '#title' => t('Pickup Note'),
                '#type' => 'textarea',
                '#description' => t('Enter any information here that would assist with the pick up process'),
                '#default_value' =>'',
                '#attributes' => array('class'=>array('pickup_note')),
                ));
        } 
    }
        $contents=$pickup_extra;
          return array('contents' => $contents);
      
            case 'process':
                $parcel_pickup = $form_state['values']['panes']['parcel_pickup'];
                $parcel_delivery = $form_state['values']['panes']['parcel_delivery'];

	        $p_count = count($parcel_pickup);
	        $d_count = count($parcel_delivery);
                foreach($parcel_pickup as $key=>$pinfo){

                     if (empty($pinfo['field_parcel_pickup_address_data']['address']['first_name']) ) {

                        form_set_error('panes][parcel_pickup]['.$key.'][field_parcel_pickup_address_data][address][first_name', $p_count==1?t('Pickup: must enter pickup first name.'):t('Pickup parcel#'.($key+1).': must enter pickup first name.'));
                    }
                    if (empty($pinfo['field_parcel_pickup_address_data']['address']['last_name']) ) {
                        form_set_error('panes][parcel_pickup]['.$key.'][field_parcel_pickup_address_data][address][last_name', $p_count==1?t('Pickup: must enter pickup last name.'):t('Pickup parcel#'.($key+1).': must enter pickup last name.'));
                    }
                    if (empty($pinfo['field_parcel_pickup_address_data']['address']['street1']) ) {
                        form_set_error('panes][parcel_pickup]['.$key.'][field_parcel_pickup_address_data][address][street1', $p_count ==1 ?t('Pickup: must enter pickup street.'):t('Pickup parcel#'.($key+1).': must enter pickup street.'));
                    }
                    if (!empty($pinfo['field_parcel_pickup_address_data']['address']['phone']) && !is_numeric($pinfo['field_parcel_pickup_address_data']['address']['phone'])) {
                        form_set_error('panes][parcel_pickup]['.$key.'][field_parcel_pickup_address_data][address][phone', $p_count ==1? t('Pickup: only numbers allowed for phone number field.'):t('Pickup parcel#'.($key+1).': only numbers allowed for phone number field.'));
                    }
                    if (empty($pinfo['field_pick_up_time']) ||(!empty($pinfo['field_pick_up_time']) && strtotime($pinfo['field_pick_up_time']) <$check_mindate )) {
                        form_set_error('panes][parcel_pickup]['.$key.'][field_pick_up_time', $p_count ==1?t('Pickup: You must select a pickup time '.variable_get('liveparcels_pickup_time',0).' days from now. '):t('Pickup parcel#'.($key+1).': You must select a pickup time '.variable_get('liveparcels_pickup_time',0).' days from now. '));
                    }   
                }
              
                foreach($parcel_delivery as $key=>$pinfo){

                  

                     if (empty($pinfo['field_parcel_delivery_address_data']['address']['first_name']) ) {
                        form_set_error('panes][parcel_delivery]['.$key.'][field_parcel_delivery_address_data][address][first_name', $d_count==1?t('Delivery: must enter delivery first name.'):t('Delivery parcel#'.($key+1).': must enter delivery first name.'));
                    }
                    if (empty($pinfo['field_parcel_delivery_address_data']['address']['last_name']) ) {
                        form_set_error('panes][parcel_delivery]['.$key.'][field_parcel_delivery_address_data][address][last_name', $d_count==1?t('Delivery: must enter delivery last name.'):t('Delivery parcel#'.($key+1).': must enter delivery last name.'));
                    }
                    if (empty($pinfo['field_parcel_delivery_address_data']['address']['street1']) ) {
                        form_set_error('panes][parcel_delivery]['.$key.'][field_parcel_delivery_address_data][address][street1', $d_count==1?t('Delivery: must enter delivery street name.'):t('Delivery parcel#'.($key+1).': must enter delivery street name.'));
                    }
                    if (!empty($pinfo['field_parcel_delivery_address_data']['address']['phone']) && !is_numeric($pinfo['field_parcel_delivery_address_data']['address']['phone'])) {
                        form_set_error('panes][parcel_delivery]['.$key.'][field_parcel_delivery_address_data][address][phone', $d_count==1?t('Delivery: only numbers allowed for phone number field.'):t('Delivery parcel#'.($key+1).': only numbers allowed for phone number field.'));
                    }
                }
                return true;
        }
    }
}
/**
 * Implements hook_uc_checkout_pane().
 create liveparcels extra pane 
 * */
function lp_parcel_uc_checkout_pane_parcel_delivery($op, $order, $form = NULL, &$form_state = NULL){

   global $user;
  $orderid = 0;

        $parcels=liveparcels_getparcelsdata();
     if($parcels){
      switch ($op) {
        case 'view':      
        isset($_SESSION['lp_order']) ? $orderid = $_SESSION['lp_order']:$order->order_id;
        if(module_exists('lp_address')){  
          drupal_add_js(drupal_get_path('module', 'lp_address') . '/lp_address.js');
          }
    $parceldata=lp_parcel_get_parcel_data($orderid);
    $extra_info=$parceldata['extra_info'];
    if(is_array($extra_info) && count($extra_info)>0){
        $delivery_extra=array();
        if($parcels['ptype']=="1"){
             $delivery_extra[0]=array('field_parcel_delivery_address_data'=>lp_parcel_get_parcel_address($parcels,'pickup',0,$extra_info['deliverydata'][0]['field_parcel_delivery_address'],$user),'field_authority_to_leave'=>array(
              '#title' => t('Authority to leave'),
                '#type' =>'checkbox', 
                '#default_value'=>$extra_info['deliverydata'][0]['field_authority_to_leave'],
                '#attributes' => array('class'=>array('authority_to_leave')),
                  ),'field_delivery_note'=>array(
                '#title' => t('Delivery Note'),
                '#type' => 'textarea',
                '#description' => t('Enter any information here that would assist with the delivery process'),
                '#default_value' =>$extra_info['deliverydata'][0]['field_delivery_note'],
                '#attributes' => array('class'=>array('delivery_note')),
                ));
        }else{
            for($f=0;$f<count($parcels['parcels']);$f++){
                   $delivery_extra[$f]=array('parcel_title'=>array('#markup'=>'<h2>'.$parcels['parcels'][$f]['parcelnum'].'</h2>'),'field_parcel_delivery_address_data'=>lp_parcel_get_parcel_address($parcels,'pickup',$f,$extra_info['deliverydata'][$f]['field_parcel_delivery_address'],$user),
                   'field_authority_to_leave'=>array(
                    '#title' => t('Authority to leave'),
                    '#type' =>'checkbox', 
                    '#default_value'=>$extra_info['deliverydata'][$f]['field_authority_to_leave'],
                    '#attributes' => array('class'=>array('authority_to_leave')),
                      ),'field_customer_reference'=>array(
                        '#type' => 'textfield',
                        '#title' => t('Customer reference'),
                        '#default_value' =>$extra_info['deliverydata'][$f]['field_customer_reference'],
                        '#description' => t('Enter any reference number here to help you find this item.')
                      ),'field_delivery_note'=>array(
                    '#title' => t('Delivery Note'),
                    '#type' => 'textarea',
                    '#description' => t('Enter any information here that would assist with the delivery process'),
                    '#default_value' =>$extra_info['deliverydata'][$f]['field_delivery_note'],
                     '#attributes' => array('class'=>array('delivery_note')),
                    ));
            }
        }
    }else{
        $delivery_extra=array();
        if($parcels['ptype']=="1"){
             $delivery_extra[0]=array('field_parcel_delivery_address_data'=>lp_parcel_get_parcel_address($parcels,'pickup',0,array(),$user),'field_authority_to_leave'=>array(
              '#title' => t('Authority to leave'),
                '#type' =>'checkbox', 
                '#attributes' => array('class'=>array('authority_to_leave')),
                  ),'field_delivery_note'=>array(
                '#title' => t('Delivery Note'),
                '#type' => 'textarea',
                '#description' => t('Enter any information here that would assist with the delivery process'),
                '#default_value' =>'',
                '#attributes' => array('class'=>array('delivery_note')),
                ));
        }else{
            for($f=0;$f<count($parcels['parcels']);$f++){
                   $delivery_extra[$f]=array('parcel_title'=>array('#markup'=>'<h2>'.$parcels['parcels'][$f]['parcelnum'].'</h2>'),'field_parcel_delivery_address_data'=>lp_parcel_get_parcel_address($parcels,'pickup',$f,array(),$user),
                   'field_authority_to_leave'=>array(
                    '#title' => t('Authority to leave'),
                    '#type' =>'checkbox', 
                    '#attributes' => array('class'=>array('authority_to_leave')),
                      ),'field_customer_reference'=>array(
                        '#type' => 'textfield',
                        '#title' => t('Customer reference'),
                        '#default_value' =>'',
                        '#description' => t('Enter any reference number here to help you find this item.')
                      ),'field_delivery_note'=>array(
                    '#title' => t('Delivery Note'),
                    '#type' => 'textarea',
                    '#description' => t('Enter any information here that would assist with the delivery process'),
                    '#default_value' =>'',
                     '#attributes' => array('class'=>array('delivery_note')),
                    ));
            }
        }
    }
           $contents=$delivery_extra;
          
          return array('contents' => $contents);
        case 'process':
        if(module_exists('lp_address')){  
          drupal_add_js(drupal_get_path('module', 'lp_address') . '/lp_address.js');
          }
        $pickupdata=array();
        $deliverydata=array();
           if($parcels['ptype']==1){
              
                 foreach($parcels['parcels'] as $key=>$val){
                    //$pickup_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_pickup'][$key]['field_parcel_pickup_address_data']);
                    $pickupdata[$key]=@array('field_parcel_pickup_address'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_parcel_pickup_address_data'],'field_pick_up_time'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_pick_up_time'],'field_pick_up_time_ampm'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_pick_up_time_ampm'],'field_cash_to_collect'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_cash_to_collect'],'field_pickup_note'=>$form_state['values']['panes']['parcel_pickup'][$key]['field_pickup_note']);
                }
                // $delivery_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_delivery'][0]['field_parcel_delivery_address_data']);
                $deliverydata[0]=@array('field_parcel_delivery_address'=>$form_state['values']['panes']['parcel_delivery'][0]['field_parcel_delivery_address_data'],'field_authority_to_leave'=>$form_state['values']['panes']['parcel_delivery'][0]['field_authority_to_leave'],'field_customer_reference'=>$form_state['values']['panes']['parcel_delivery'][0]['field_customer_reference'],'field_delivery_note'=>$form_state['values']['panes']['parcel_delivery'][0]['field_delivery_note']);
            }else{

               // $pickup_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_pickup'][0]['field_parcel_pickup_address_data']);
                $pickupdata[0]=@array('field_parcel_pickup_address'=>$form_state['values']['panes']['parcel_pickup'][0]['field_parcel_pickup_address_data'],'field_pick_up_time'=>$form_state['values']['panes']['parcel_pickup'][0]['field_pick_up_time'],'field_pick_up_time_ampm'=>$form_state['values']['panes']['parcel_pickup'][0]['field_pick_up_time_ampm'],'field_cash_to_collect'=>$form_state['values']['panes']['parcel_pickup'][0]['field_cash_to_collect'],'field_pickup_note'=>$form_state['values']['panes']['parcel_pickup'][0]['field_pickup_note']);
                 foreach($parcels['parcels'] as $key=>$val){
                    //$delivery_address_id=lp_parcel_update_parcel_address($form_state['values']['panes']['parcel_delivery'][$key]['field_parcel_delivery_address_data']);
                    $deliverydata[$key]=@array('field_parcel_delivery_address'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_parcel_delivery_address_data'],'field_authority_to_leave'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_authority_to_leave'],'field_customer_reference'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_customer_reference'],'field_delivery_note'=>$form_state['values']['panes']['parcel_delivery'][$key]['field_delivery_note']);
                }
        }
        $parceldata=array('pickupdata'=>$pickupdata,'deliverydata'=>$deliverydata);
         db_update('liveparcels_order')->fields(array('extra_info' => serialize($parceldata)))->condition('order_id',$order->order_id , '=')->execute();
   case 'review':   
      }
    }
}
/*
 * get_parcel_address($parcel_info,'pickup')
 * parcels info,parcels type
 * */
function lp_parcel_get_parcel_address($parcel_info,$parcel_type='pickup',$key='0',$default_info=array(),$user){
        if(module_exists('lp_address')){
            return  lp_address_address_view($parcel_info,$parcel_type,$key,$default_info,$user);
        }else{
        return array();    
        }
}
/*
 * update_parcel_address($address)
 * parcels address info
 * */
function lp_parcel_update_parcel_location($address){
        if(module_exists('lp_address')){
            return  lp_address_location_update($address);
        }else{
        return 0;    
        }
}
/*
 * update_parcel_address($address)
 * parcels address info,user id
 * */
function lp_parcel_update_parcel_address($address,$uid){
        if(module_exists('lp_address')){
            return  lp_address_address_update($address,$uid);
        }else{
        return 0;    
        }
}

/*
 * lp_parcel_table theme
 * */
function theme_lp_parcel_table($variables) {
    $parcels = $variables['items'];
 
  // Set up table rows.
    foreach ($parcels['parcels'] as $parcel ) {
        
      $rows[] = array(
        array('data' => $parcel['parcelnum'], 'class' => array('products')),
        array('data' => $parcel['dimfirst'].'x'.$parcel['dimsecond'].'x'.$parcel['dimthree'].' cm','class' => array('price')),
     
      );
    }

  // Add the subtotal as the final row.
    $rows[] = array(
      'data' => array(
        // One cell
        array(
          'data' => array(
            '#theme' => 'uc_price',
            '#prefix' => '<span id="subtotal-title">' . t('Subtotal:') . '</span> ',
            '#price' => $parcels['totals'],
          ),
          // Cell attributes
          'colspan' => 4,
          'class' => array('subtotal'),
        ),
      ),
      // Row attributes
      'class' => array('subtotal'),
    );
  return theme('table', array( 'rows' => $rows, 'attributes' => array('class' => array('lp_parcel_table'))));
}
/**
 * Implements hook_uc_checkout_pane().
 */
function lp_parcel_uc_checkout_pane() {
   
      $panes['parcel_pickup'] = array(
      'callback' => 'lp_parcel_uc_checkout_pane_parcel_pickup',
    'title' => t('Parcel pickup details'),
    'desc' => t("Display the contents of a customer's shopping cart."),
      'enabled' => FALSE,
      'weight' => 4,
      );
      $panes['parcel_delivery'] = array(
      'callback' => 'lp_parcel_uc_checkout_pane_parcel_delivery',
    'title' => t('Parcel delivery details'),
    'desc' => t("Display the contents of a customer's shopping cart."),
      'enabled' => FALSE,
      'weight' => 5,
      );
       
  return $panes;    
}
function lp_parcel_uc_checkout_complete($order, $account){

      $parcels=liveparcels_getparcelsdata();
     if(is_array($parcels) && count($parcels)>0){
            if(module_exists('lp_discount')){
 
            $parcels['discount']=lp_discount_get_pricing($parcels['totals']);
            $order_total=$parcels['totals']-$parcels['discount'];
        }else{
            $order_total=$parcels['totals'];
        }
     db_update('uc_orders')->fields(array('order_total' => $order_total))->condition('order_id',$order->order_id , '=')->execute();
    db_update('uc_order_products')->fields(array('price' => $parcels['totals']))->condition('order_id',$order->order_id , '=')->execute();
  if(!isset($_SESSION['lp_node'])){
    $order_id=$order->order_id;
    $parceldata=lp_parcel_get_parcel_data($order_id);
    $parcel_info=$parceldata['parcel_info'];
    $extra_info=$parceldata['extra_info'];

    
    foreach($parcel_info['parcels'] as $key=>$parcel){
        
       $newnode = new stdClass();
       $newnode->uid=$order->uid;
       $newnode->language='und';
       $newnode->title='Order'.$order_id.str_replace('#','',$parcel['parcelnum']);
       $newnode->type='live_parcel';
       $newnode->status=1;
       $newnode->comment=2;

      if($order->order_total==0 || $order->order_total ==null){
        $newnode->field_fee_status[$newnode->language][0]['value'] = 'Undefined';
      }else{
        $newnode->field_fee_status[$newnode->language][0]['value'] = 'Confirmed';
      }


       node_save($newnode);
       
        $node = node_load($newnode->nid);

       $node->field_parcel_size[$node->language][0]['value'] =$parcel['dimfirst'].'x'.$parcel['dimsecond'].'x'.$parcel['dimthree'].' cm';
       $node->field_parcel_package_name[$node->language][0]['value'] =$parcel['package_name'];
        $node->field_parcel_weight[$node->language][0]['value'] = $parcel['weighttext']>0 ? round($parcel['weighttext'],1):0;
        $pprice=str_replace(variable_get('uc_currency_sign','$'),'',$parcel['price']);
        $node->field_parcel_price[$node->language][0]['value'] =$pprice>0 ? round($pprice,2):0;
        $node->field_parcel_order_id[$node->language][0]['value'] =$order_id;

          if($parcel_info['ptype']=='1' ){
               $pickup_address_id=lp_parcel_update_parcel_address($extra_info['pickupdata'][$key]['field_parcel_pickup_address'],$order->uid);
               $delivery_address_id=$key>0 ? $delivery_address_id : lp_parcel_update_parcel_address($extra_info['deliverydata'][0]['field_parcel_delivery_address'],$order->uid);
               
               $pickup_location_id=lp_parcel_update_parcel_location($extra_info['pickupdata'][$key]['field_parcel_pickup_address'],$order->uid);
               
               $delivery_location_id=$key>0 ? $delivery_location_id : lp_parcel_update_parcel_location($extra_info['deliverydata'][0]['field_parcel_delivery_address'],$order->uid);
              
                $field_pickup_first_name=$extra_info['pickupdata'][$key]['field_parcel_pickup_address']['address']['first_name'];
                $field_pickup_last_name=$extra_info['pickupdata'][$key]['field_parcel_pickup_address']['address']['last_name'];
                
                $field_delivery_first_name=$extra_info['deliverydata'][0]['field_parcel_delivery_address']['address']['first_name'];
                $field_delivery_last_name=$extra_info['deliverydata'][0]['field_parcel_delivery_address']['address']['last_name'];
                
              $field_pick_up_time=$extra_info['pickupdata'][$key]['field_pick_up_time'];
              $field_pick_up_time_ampm=$extra_info['pickupdata'][$key]['field_pick_up_time_ampm'];
              $field_cash_to_collect=$extra_info['pickupdata'][$key]['field_cash_to_collect'];
              $field_pickup_note=$extra_info['pickupdata'][$key]['field_pickup_note'];
              
              $field_authority_to_leave=$extra_info['deliverydata'][0]['field_authority_to_leave'];
              $field_customer_reference=$extra_info['deliverydata'][0]['field_customer_reference'];
              $field_delivery_note=$extra_info['deliverydata'][0]['field_delivery_note'];
              
            }else{
                
                $pickup_address_id=$key>0 ? $pickup_address_id : lp_parcel_update_parcel_address($extra_info['pickupdata'][0]['field_parcel_pickup_address'],$order->uid);
                $delivery_address_id=lp_parcel_update_parcel_address($extra_info['deliverydata'][$key]['field_parcel_delivery_address'],$order->uid);

               $pickup_location_id= $key>0 ? $pickup_location_id :lp_parcel_update_parcel_location($extra_info['pickupdata'][0]['field_parcel_pickup_address'],$order->uid);
               
               $delivery_location_id= lp_parcel_update_parcel_location($extra_info['deliverydata'][$key]['field_parcel_delivery_address'],$order->uid);
              
              
                $field_pickup_first_name=$extra_info['pickupdata'][0]['field_parcel_pickup_address']['address']['first_name'];
                $field_pickup_last_name=$extra_info['pickupdata'][0]['field_parcel_pickup_address']['address']['last_name'];

                
                $field_delivery_first_name=$extra_info['deliverydata'][$key]['field_parcel_delivery_address']['address']['first_name'];
                $field_delivery_last_name=$extra_info['deliverydata'][$key]['field_parcel_delivery_address']['address']['last_name'];
                
                $field_pick_up_time=$extra_info['pickupdata'][0]['field_pick_up_time'];
                $field_pick_up_time_ampm=$extra_info['pickupdata'][0]['field_pick_up_time_ampm'];
                $field_cash_to_collect=intval($extra_info['pickupdata'][0]['field_cash_to_collect'])>0 ? round($extra_info['pickupdata'][0]['field_cash_to_collect'],2):0;
                $field_pickup_note=$extra_info['pickupdata'][0]['field_pickup_note'];

                $field_authority_to_leave=$extra_info['deliverydata'][$key]['field_authority_to_leave'];
                $field_customer_reference=$extra_info['deliverydata'][$key]['field_customer_reference'];
                $field_delivery_note=$extra_info['deliverydata'][$key]['field_delivery_note'];
          }
        $node->field_pickup_location[$node->language][0]['lid'] =$pickup_location_id;
        $node->field_delivery_location[$node->language][0]['lid'] =$delivery_location_id;
        
        $node->field_pickup_first_name[$node->language][0]['value'] =$field_pickup_first_name;
        $node->field_pickup_last_name[$node->language][0]['value'] =$field_pickup_last_name;

        
        $node->field_delivery_first_name[$node->language][0]['value'] =$field_delivery_first_name;
        $node->field_delivery_last_name[$node->language][0]['value'] =$field_delivery_last_name;

        
        $node->field_pick_up_time[$node->language][0]['value'] =$field_pick_up_time;
        $node->field_pick_up_time_ampm[$node->language][0]['value'] =$field_pick_up_time_ampm;
        $node->field_cash_to_collect[$node->language][0]['value'] =$field_cash_to_collect;
        $node->field_pickup_note[$node->language][0]['value'] =$field_pickup_note;
        
        $node->field_authority_to_leave[$node->language][0]['value'] =$field_authority_to_leave>0 ? $field_authority_to_leave:0;
        $node->field_customer_reference[$node->language][0]['value'] =$field_customer_reference;
        $node->field_delivery_note[$node->language][0]['value'] =$field_delivery_note;
  
          node_save($node);
    }
      
 $cart_id=uc_cart_get_id();
 db_delete("liveparcels_cart")->condition('cart_id',$cart_id, '=')->execute();

    }else{
 $cart_id=uc_cart_get_id();
 db_delete("liveparcels_cart")->condition('cart_id',$cart_id, '=')->execute();
       $lp_nid  = $_SESSION['lp_node'];
       $lp_node = node_load($lp_nid);
    if(!empty($lp_node)){
       $lp_node->title = 'Order'.$order->order_id.'Parcel1';
       $lp_node->field_parcel_order_id['und'][0]['value']= $order->order_id;
       $lp_node->field_fee_status['und'][0]['value'] = 'Confirmed';
       node_save($lp_node); 
    }
       unset($_SESSION['lp_node']);
       unset($_SESSION['lp_order']);
    } 
    unset($_SESSION['admin_order']);
    unset($_SESSION['pickup_data']);
    unset($_SESSION['delivery_data']); 

 }
}
function lp_parcel_get_parcel_data($order_id){
    $pdata=db_query("SELECT `parcel_info`,`extra_info` FROM `liveparcels_order` WHERE `order_id`='$order_id'")->fetchAssoc();
    $parceldata=array("parcel_info"=>unserialize($pdata['parcel_info']),"extra_info"=>unserialize($pdata['extra_info']));
    return  $parceldata;    
}

/*if product_id is liveparcel,checkout cart pane hiddren*/
function lp_parcel_uc_checkout_pane_alter(&$panes) {
     $parcels=liveparcels_getparcelsdata();

 global $user; 
 $check_user = db_query('SELECT count(*) FROM {masquerade} where uid_as = :uid',array(':uid'=>$user->uid))->fetchfield();



     if($check_user>0 && isset($_SESSION['admin_order'])){
	 $panes['admin_order_settings']['enabled'] = true;
     }else{
	 $panes['admin_order_settings']['enabled'] = false;
     }

     if($parcels){
          $panes['parcel_pickup']['enabled'] = true;
          $panes['parcel_delivery']['enabled'] = true;
    }else{
        $panes['parcel_pickup']['enabled'] = false;
        $panes['parcel_delivery']['enabled'] = false;
       
    }



}
function  lp_parcel_form_uc_cart_checkout_form_alter(&$form,&$form_state){
 $form['actions']['cancel']['#submit'][] = 'jump_cart';
}


function lp_parcel_form_uc_cart_checkout_review_form_alter(&$form,&$form_state){

 $form['actions']['back']['#submit'][] = 'backup_address';
}


function jump_cart(&$form,&$form_state){
  $form_state['redirect'] = 'cart';
}

function backup_address(&$form,&$form_state){
 $data = lp_parcel_get_parcel_data($form_state['uc_order']->order_id);

     $pickup_data = $data['extra_info']['pickupdata'];
     $delivery_data = $data['extra_info']['deliverydata'];
     $_SESSION['pickup_data'] = serialize($pickup_data);
     $_SESSION['delivery_data'] = serialize($delivery_data);
}



function lp_parcel_node_view($node, $view_mode) {

global $user;

  $arr = array();
  $arrname = array(); 
  $roles = db_query('select rid from {users_roles} where uid = '.$user->uid);
  foreach($roles as $role){
  $arr[] = $role->rid;
  $rname = db_query('select name from {role} where rid='.$role->rid)->fetchfield();
  $arrname[] = $rname;		
  }

    if ($node->type=="live_parcel"){

	drupal_add_css(drupal_get_path('module','lp_parcel').'/lp_parcel.css');
	//drupal_add_js(drupal_get_path('module','lp_address').'/lp_address.js');

        global $base_url;

        $account = user_load($node->uid);
	$role_array = '';
	foreach($account->roles as $key=>$role){
		$role_array .=  '"'.$key.'"'.':'. '"'. $role.'",';
	}
	$orderid = empty($node->field_parcel_order_id['und'][0]['value'])?'':$node->field_parcel_order_id['und'][0]['value'];
	$price = empty($node->field_parcel_price['und'][0]['value'])?'':$node->field_parcel_price['und'][0]['value'];
	$dimension = empty($node->field_parcel_size['und'][0]['value'])?'':$node->field_parcel_size['und'][0]['value'];
	$package = empty($node->field_parcel_package_name['und'][0]['value'])?'':$node->field_parcel_package_name['und'][0]['value'];
	$weight = empty($node->field_parcel_weight['und'][0]['value'])?'':$node->field_parcel_weight['und'][0]['value'];
	$leave = empty($node->field_authority_to_leave['und'][0]['value'])?'':$node->field_authority_to_leave['und'][0]['value'];
	$collect = empty($node->field_cash_to_collect['und'][0]['value'])?'':$node->field_cash_to_collect['und'][0]['value'];
	$ref = empty($node->field_customer_reference['und'][0]['value'])?'':$node->field_customer_reference['und'][0]['value'];
	$d_note = empty($node->field_delivery_note['und'][0]['value'])?'':$node->field_delivery_note['und'][0]['value'];
	$p_note = empty($node->field_pickup_note['und'][0]['value'])?'':$node->field_pickup_note['und'][0]['value'];
	$p_date = empty($node->field_pick_up_time['und'][0]['value'])?'':$node->field_pick_up_time['und'][0]['value'];
	$shift = empty($node->field_pick_up_time_ampm['und'][0]['value'])?'':$node->field_pick_up_time_ampm['und'][0]['value'];

	$p_address = empty($node->field_pickup_location['und'][0])?array():$node->field_pickup_location['und'][0];
	$d_address = empty($node->field_delivery_location['und'][0])?array():$node->field_delivery_location['und'][0];




        $data = '{"username":"'.$account->name.'","uid":'.$node->uid.',"nid":'.$node->nid.',"date":"'.date('Y-m-d',$node->created).'","title":"'.$node->title.'","url":"'.$base_url.'/node/'.$node->nid.'","Order ID":"'.$orderid.'","Shipping fee":"'.$price.'","Parcel dimension":"'.$dimension.'","Package type":"'.$package.'","Parcel weight":"'.$weight.'","Authority to leave":"'.$leave.'","Cash to collect":"'.$collect.'","Customer reference":"'.$ref.'","Delivery note":"'.$d_note.'","Pickup note":"'.$p_note.'","Pickup date":"'.$p_date.'","Pickup shift":"'.$shift.'","Pickup address":[{"name":"'.$p_address['name'].'","street":"'.$p_address['street'].'","city":"'.$p_address['city'].'","province":"'.$p_address['province'].'","postal_code":"'.$p_address['postal_code'].'","country":"'.$p_address['country_name'].'"}],"Delivery address":[{"name":"'.$d_address['name'].'","street":"'.$d_address['street'].'","city":"'.$d_address['city'].'","province":"'.$d_address['province'].'","postal_code":"'.$d_address['postal_code'].'","country":"'.$d_address['country_name'].'"}],"role":[{'.$role_array.'}]}';

        QRcode::png($data, 'sites/default/files/'.$node->nid.$orderid.'.png', "M", 3, 3);
        $code = '<img src="/sites/default/files/'.$node->nid.$orderid.'.png"/>';

        $node->content['parcel_detail'] = array(
	  '#prefix' => '<div class="parcel_detail">',
  	  '#suffix' => '</div>',
    	  '#weight'=>-100,
	);

	$node->content['parcel_detail']['sub_title'] = array(
	  '#markup'=>'<h3>'.t('Parcel Details').'</h3>',
    	  '#weight'=>-10,
	); 
        if(!empty($node->content['field_fee_status'])){
	if($node->content['field_fee_status'][0]['#markup']=="Confirmed"&&(in_array(3,$arr)||in_array('driver',$arrname))){
	$node->content['parcel_detail']['qrcode'] = array(
    	  '#markup' => '<div class="prcode">'.$code.'</div>',
    	  '#weight'=>-9,
 	);
	}
        }
	$node->content['parcel_detail']['parcel_order_id'] = empty($node->content['field_parcel_order_id'])?'':$node->content['field_parcel_order_id'];
	$node->content['parcel_detail']['parcel_price'] = empty($node->content['field_parcel_price'])?'':$node->content['field_parcel_price'];
	$node->content['parcel_detail']['parcel_size'] = empty($node->content['field_parcel_size'])?'':$node->content['field_parcel_size'];
	$node->content['parcel_detail']['parcel_package_name'] = empty($node->content['field_parcel_package_name'])?'':$node->content['field_parcel_package_name'];
	$node->content['parcel_detail']['parcel_weight'] = empty($node->content['field_parcel_weight'])?'':$node->content['field_parcel_weight'];
	$node->content['parcel_detail']['authority_to_leave'] = empty($node->content['field_authority_to_leave'])?'':$node->content['field_authority_to_leave'];
	$node->content['parcel_detail']['cash_to_collect'] = empty($node->content['field_cash_to_collect'])?'':$node->content['field_cash_to_collect'];
	$node->content['parcel_detail']['customer_reference'] = empty($node->content['field_customer_reference'])?'':$node->content['field_customer_reference'];
	$node->content['parcel_detail']['fee_status'] = empty($node->content['field_fee_status'])?'':$node->content['field_fee_status'];

        hide($node->content['field_parcel_order_id']);
        hide($node->content['field_parcel_price']);
        hide($node->content['field_parcel_size']);
        hide($node->content['field_parcel_package_name']);
        hide($node->content['field_parcel_weight']);
        hide($node->content['field_authority_to_leave']);
        hide($node->content['field_cash_to_collect']);
        hide($node->content['field_customer_reference']);
        hide($node->content['field_fee_status']);

if($user->uid == $node->uid ||in_array(3,$arr)||in_array('driver',$arrname)){

        $node->content['address'] = array(
    	  '#type' => 'fieldset',
	  '#title'=> t('Address settings'),
    	  '#weight' => -99,
	  '#collapsible' => TRUE,
  	  '#collapsed' => FALSE,
 	);
	$node->content['address']['pickup'] = array('#prefix'=>'<div class="pickup_info">','#suffix'=>'</div>'); 
	$node->content['address']['delivery'] = array('#prefix'=>'<div class="delivery_info">','#suffix'=>'</div>');      
        $node->content['address']['pickup']['pickup_note'] = empty($node->content['field_pickup_note'])?'':$node->content['field_pickup_note'];
        $node->content['address']['pickup']['pickup_date'] = empty($node->content['field_pick_up_time'])?'':$node->content['field_pick_up_time'];
        $node->content['address']['pickup']['pickup_time_ampm'] = empty($node->content['field_pick_up_time_ampm'])?'':$node->content['field_pick_up_time_ampm'];
        $node->content['address']['pickup']['pickup_location'] = array('#markup'=> '<div class="field field-name-field-pickup-location field-type-location field-label-above"><div class="field-label">Pickup address:&nbsp;</div><div class="field-items"><div class="field-item even"><div class="location vcard">
  <div class="adr">
          <span class="fn">'.$p_address['name'].'</span>
         '.(empty($p_address['company'])?'':'<div class="company-name">'.$p_address['company'].'</div>').'
              <div class="street-address">'.$p_address['street'].' </div>
              <span class="postal-code">'.$p_address['postal_code'].'</span>
              <span class="locality">'.$p_address['city'].'</span>, <span class="region">'.$p_address['province'].'</span>
              <div class="country-name">'.$p_address['country_name'].'</div>
            '.(empty($p_address['phone'])?'':'<div class="phone"><span>Phone: </span>'.$p_address['phone'].'</div>').'
    </div>
      <div class="map-link">
      <div class="location map-link">See map: <a href="http://maps.google.com?q='.$p_address['street'].'%2C+'.$p_address['city'].'%2C+'.$p_address['province'].'%2C+'.$p_address['postal_code'].'%2C+'.$p_address['country'].'">Google Maps</a></div>    </div>
  </div>
</div></div></div>',
'#weight'=>100,
);
        $node->content['address']['delivery']['delivery_note'] = empty($node->content['field_delivery_note'])?'':$node->content['field_delivery_note'];
        $node->content['address']['delivery']['delivery_location'] = array('#markup'=>'<div class="field field-name-field-delivery-location field-type-location field-label-above"><div class="field-label">Delivery address:&nbsp;</div><div class="field-items"><div class="field-item even"><div class="location vcard">
  <div class="adr">
          <span class="fn">'.$d_address['name'].'</span>
         '.(empty($d_address['company'])?'':'<div class="company-name">'.$d_address['company'].'</div>').'
              <div class="street-address">'.$d_address['street'].' </div>
              <span class="postal-code">'.$d_address['postal_code'].'</span>
              <span class="locality">'.$d_address['city'].'</span>, <span class="region">'.$d_address['province'].'</span>
              <div class="country-name">'.$d_address['country_name'].'</div>
            '.(empty($d_address['phone'])?'':'<div class="phone"><span>Phone: </span>'.$d_address['phone'].'</div>').'
    </div>
      <div class="map-link">
      <div class="location map-link">See map: <a href="http://maps.google.com?q='.$d_address['street'].'%2C+'.$d_address['city'].'%2C+'.$d_address['province'].'%2C+'.$d_address['postal_code'].'%2C+'.$d_address['country'].'">Google Maps</a></div>    </div>
  </div>
</div></div></div>',
'#weight'=>100,
);

}
        hide($node->content['field_pickup_note']);
        hide($node->content['field_pick_up_time']);
        hide($node->content['field_pick_up_time_ampm']);
        hide($node->content['field_pickup_location']);
        hide($node->content['field_delivery_note']);
        hide($node->content['field_delivery_location']);



        $node->content['parcel_updates'] = array(
    	  '#type' => 'fieldset',
	  '#title'=> t('Parcel updates'),
    	  '#weight' => -97,
	  '#collapsible' => TRUE,
  	  '#collapsed' => FALSE,
 	);

      $node->content['links'] = '';
if(!empty($node->content['comments'])){
      $node->content['comments']['#theme'] = 'custom_comment_wrapper__node_live_parcel';

      $cids = db_query('SELECT cid FROM {comment} WHERE nid=:nid ORDER BY created DESC',array(':nid'=>$node->nid));
        if($cids!=null){
	  foreach($cids as $cid){
             $node->content['comments']['comments'][$cid->cid]['#theme'] = 'custom_comment__node_live_parcel';
	  } 
        }
}
       if(!empty($node->content['comments'])){
	$node->content['parcel_updates']['parcel_comment'] = $node->content['comments'];
	}else{
         $node->content['parcel_updates']['parcel_comment']['#markup']= 'No Update available yet';
	}
	$node->content['comments'] = array();     
         return $node;
    }   
}
